import{k as I,r as h,bd as Q,ai as w}from"./main-BGmfaZsq.js";function F(){const v=I(),o=h(!1),d=h([]),f=h(0),m=h(0),y=async()=>{if(o.value||d.value.length===0)return;o.value=!0;const{to:e,type:a}=d.value.shift();try{a==="push"?await v.push(e):await v.replace(e)}catch(n){console.error("🚫 [Navigation Queue] Navigation failed:",n),u()}finally{o.value=!1,d.value.length>0&&setTimeout(y,50)}},u=()=>{f.value++,m.value=Date.now()},N=()=>{const e=Date.now();return f.value>5&&e-m.value<3e4?(console.warn("🚨 [Safe Navigation] Too many errors detected, performing emergency reset"),b(),!0):!1},b=(e="/admin/dashboard")=>{console.warn("🚨 [Safe Navigation] Emergency reset triggered"),E(),f.value=0,m.value=0,setTimeout(()=>{P(e)},100)},S=(e,a="push")=>{d.value.push({to:e,type:a}),y()},c=async(e,a={})=>{const{useQueue:n=!1,maxRetries:t=2,fallback:r,skipSafetyCheck:i=!1}=a;try{if(!e)return console.warn("⚠️ [Navigation] Invalid route:",e),u(),Promise.reject(new Error("Invalid route"));if(n&&o.value)return console.log("🔄 [Navigation] Queueing navigation:",e),S(e,"push"),Promise.resolve();if(!i&&N())return Promise.resolve();if(typeof e=="object"&&"params"in e&&e.params){for(const[l,g]of Object.entries(e.params))if(g==null||g==="")return console.warn(`⚠️ [Navigation] Invalid param "${l}":`,g,"for route:",e),u(),r?(console.log("🔄 [Navigation] Using fallback route:",r),c(r,{...a,fallback:void 0})):Promise.reject(new Error(`Invalid route parameter: ${l}`))}const s=v.resolve(e);return!s||!s.name?(console.warn("⚠️ [Navigation] Could not resolve route:",e),u(),r?(console.log("🔄 [Navigation] Using fallback route:",r),c(r,{...a,fallback:void 0})):Promise.reject(new Error("Route not found"))):(o.value=!0,await w(),await p(e,"push",t,r))}catch(s){return console.error("🚫 [Navigation] Error during navigation setup:",s,"to:",e),u(),r?(console.log("🔄 [Navigation] Attempting fallback navigation:",r),c(r,{...a,fallback:void 0})):Promise.reject(s)}finally{setTimeout(()=>{o.value=!1},100)}},p=async(e,a,n=2,t)=>{let r=0;for(;r<=n;)try{const i=a==="push"?await v.push(e):await v.replace(e);return console.log("✅ [Navigation] Navigation successful:",e),f.value=Math.max(0,f.value-1),i}catch(i){r++,u();const s=(i==null?void 0:i.message)||"";if(console.error(`🚫 [Navigation] Attempt ${r}/${n+1} failed:`,i),s.includes("startsWith")||s.includes("Cannot read properties of undefined")){if(console.error("🚫 [Navigation] Path/property access error detected"),r<=n){console.log(`🔄 [Navigation] Retrying navigation in ${r*100}ms...`),await new Promise(g=>setTimeout(g,r*100));continue}const l=T(e,t);if(l&&l!==e)return console.log("🔄 [Navigation] Using safe route:",l),p(l,a,0)}else if(s.includes("emitsOptions")||s.includes("Cannot read properties of null")){if(console.error("🚫 [Navigation] Component lifecycle error detected"),r<=n){const l=r*200;console.log(`🔄 [Navigation] Waiting ${l}ms for component cleanup...`),await new Promise(g=>setTimeout(g,l)),await w();continue}if(r>n){console.warn("🔄 [Navigation] Force reloading page due to persistent lifecycle errors");const l=typeof e=="string"?e:e.path||"/admin/dashboard";window.location.href=l;return}}else if(s.includes("NavigationDuplicated")||s.includes("redundant navigation"))return console.log("ℹ️ [Navigation] Redundant navigation ignored:",e),Promise.resolve();if(r>n){if(t&&t!==e)return console.log("🔄 [Navigation] Final fallback attempt:",t),p(t,a,0);throw i}}},T=(e,a)=>{if(a)return a;const n=typeof e=="string"?e:e.path||"";return n.includes("/admin/stock")||n.includes("/admin/support/tickets")||n.includes("/admin/withdrawals")||n.includes("/admin")?"/admin/dashboard":"/"},k=async(e,a={})=>{const{maxRetries:n=2,fallback:t,skipSafetyCheck:r=!1}=a;try{return e?!r&&N()?Promise.resolve():(o.value=!0,await w(),await p(e,"replace",n,t)):(console.warn("⚠️ [Navigation] Invalid route for replace:",e),u(),Promise.reject(new Error("Invalid route")))}catch(i){return console.error("🚫 [Navigation] Error during replace:",i,"to:",e),u(),t?(console.log("🔄 [Navigation] Attempting fallback replace:",t),k(t,{...a,fallback:void 0})):Promise.reject(i)}finally{setTimeout(()=>{o.value=!1},100)}},j=e=>{try{if(window.history.length>1)v.back();else return c(e||{name:"admin-dashboard"})}catch(a){return console.error("🚫 [Navigation] Error going back:",a),u(),c(e||"/admin/dashboard")}},P=e=>{console.warn("🔄 [Navigation] Force navigating to:",e);try{window.location.href=e}catch(a){console.error("🚨 [Navigation] Force navigation failed:",a),window.location.reload()}},C=()=>!o.value,E=()=>{d.value=[],o.value=!1};return{safePush:c,safeReplace:k,safeBack:j,forceNavigate:P,isNavigationSafe:C,clearNavigationQueue:E,checkEmergencyReset:N,emergencyReset:b,getNavigationStats:()=>({errorCount:f.value,lastErrorTime:m.value,queueLength:d.value.length,isNavigating:o.value}),isNavigating:Q(o),router:v}}export{F as u};
