import{b4 as k,r as d,V as h,b5 as m}from"./main-uLG9IIeX.js";const P=k("commissions",()=>{const c=d([]),i=d(null),v=d(null),p=d(!1),l=d(null),w=d({current_page:1,last_page:1,per_page:15,total:0,from:0,to:0}),g=d({page:1,per_page:15,sort:"created_at",dir:"desc"}),y=h(()=>c.value.length>0),C=h(()=>p.value),f=async o=>{var r,t;p.value=!0,l.value=null;try{o&&Object.assign(g.value,o);const e=await m.get("admin/commissions",{params:g.value});if(e.data.success)c.value=e.data.data,w.value=e.data.pagination;else throw new Error(e.data.message||"Failed to fetch commissions")}catch(e){l.value=((t=(r=e.response)==null?void 0:r.data)==null?void 0:t.message)||e.message||"Failed to fetch commissions",console.error("Error fetching commissions:",e)}finally{p.value=!1}};return{commissions:c,currentCommission:i,summary:v,loading:p,error:l,pagination:w,filters:g,hasCommissions:y,isLoading:C,fetchCommissions:f,fetchCommission:async o=>{var r,t,e,a;if(console.log("🔍 Store: fetchCommission called with ID:",o),!o||o==="undefined"||o==="null"){l.value="ID de commission invalide",console.error("❌ Store: Invalid commission ID:",o);return}p.value=!0,l.value=null;try{console.log("🌐 Making API call to:",`/api/admin/commissions/${o}`);const s=await m.get(`admin/commissions/${o}`);if(console.log("📡 Raw API response:",s),s.data.success)return console.log("✅ Commission data received:",s.data.data),i.value=s.data.data,s.data.data;throw new Error(s.data.message||"Failed to fetch commission")}catch(s){return console.error("❌ Store: fetchCommission error:",s),((r=s.response)==null?void 0:r.status)===404?l.value="Commission non trouvée":((t=s.response)==null?void 0:t.status)===422?l.value="Format d'ID invalide":l.value=((a=(e=s.response)==null?void 0:e.data)==null?void 0:a.message)||s.message||"Failed to fetch commission",null}finally{p.value=!1}},approveCommission:async(o,r)=>{var t,e,a;try{const s=await m.post(`admin/commissions/${o}/approve`,{note:r});if(s.data.success){const n=c.value.findIndex(u=>u.id===o);return n!==-1&&(c.value[n]=s.data.data),((t=i.value)==null?void 0:t.id)===o&&(i.value=s.data.data),{success:!0,message:s.data.message}}else throw new Error(s.data.message||"Failed to approve commission")}catch(s){const n=((a=(e=s.response)==null?void 0:e.data)==null?void 0:a.message)||s.message||"Failed to approve commission";return console.error("Error approving commission:",s),{success:!1,message:n}}},rejectCommission:async(o,r)=>{var t,e,a;try{const s=await m.post(`admin/commissions/${o}/reject`,{reason:r});if(s.data.success){const n=c.value.findIndex(u=>u.id===o);return n!==-1&&(c.value[n]=s.data.data),((t=i.value)==null?void 0:t.id)===o&&(i.value=s.data.data),{success:!0,message:s.data.message}}else throw new Error(s.data.message||"Failed to reject commission")}catch(s){const n=((a=(e=s.response)==null?void 0:e.data)==null?void 0:a.message)||s.message||"Failed to reject commission";return console.error("Error rejecting commission:",s),{success:!1,message:n}}},adjustCommission:async(o,r,t)=>{var e,a,s;try{const n=await m.post(`admin/commissions/${o}/adjust`,{amount:r,note:t});if(n.data.success){const u=c.value.findIndex(b=>b.id===o);return u!==-1&&(c.value[u]=n.data.data),((e=i.value)==null?void 0:e.id)===o&&(i.value=n.data.data),{success:!0,message:n.data.message}}else throw new Error(n.data.message||"Failed to adjust commission")}catch(n){const u=((s=(a=n.response)==null?void 0:a.data)==null?void 0:s.message)||n.message||"Failed to adjust commission";return console.error("Error adjusting commission:",n),{success:!1,message:u}}},markAsPaid:async o=>{var r,t,e;try{const a=await m.post(`admin/commissions/${o}/mark-paid`);if(a.data.success){const s=c.value.findIndex(n=>n.id===o);return s!==-1&&(c.value[s]=a.data.data),((r=i.value)==null?void 0:r.id)===o&&(i.value=a.data.data),{success:!0,message:a.data.message}}else throw new Error(a.data.message||"Failed to mark commission as paid")}catch(a){const s=((e=(t=a.response)==null?void 0:t.data)==null?void 0:e.message)||a.message||"Failed to mark commission as paid";return console.error("Error marking commission as paid:",a),{success:!1,message:s}}},bulkApprove:async(o,r)=>{var t,e;try{const a=await m.post("admin/commissions/bulk/approve",{ids:o,note:r});if(a.data.success)return await f(),{success:!0,message:a.data.message};throw new Error(a.data.message||"Failed to bulk approve commissions")}catch(a){const s=((e=(t=a.response)==null?void 0:t.data)==null?void 0:e.message)||a.message||"Failed to bulk approve commissions";return console.error("Error bulk approving commissions:",a),{success:!1,message:s}}},bulkReject:async(o,r)=>{var t,e;try{const a=await m.post("admin/commissions/bulk/reject",{ids:o,reason:r});if(a.data.success)return await f(),{success:!0,message:a.data.message};throw new Error(a.data.message||"Failed to bulk reject commissions")}catch(a){const s=((e=(t=a.response)==null?void 0:t.data)==null?void 0:e.message)||a.message||"Failed to bulk reject commissions";return console.error("Error bulk rejecting commissions:",a),{success:!1,message:s}}},recalculateOrder:async o=>{var r,t;try{const e=await m.post(`admin/commissions/recalc/${o}`);if(e.data.success)return await f(),{success:!0,message:e.data.message};throw new Error(e.data.message||"Failed to recalculate commissions")}catch(e){const a=((t=(r=e.response)==null?void 0:r.data)==null?void 0:t.message)||e.message||"Failed to recalculate commissions";return console.error("Error recalculating commissions:",e),{success:!1,message:a}}},exportCommissions:async o=>{var r,t;try{const e=o||g.value,a=await m.get("admin/commissions/export",{params:e,responseType:"blob"}),s=window.URL.createObjectURL(new Blob([a.data])),n=document.createElement("a");return n.href=s,n.setAttribute("download",`commissions-${new Date().toISOString().split("T")[0]}.csv`),document.body.appendChild(n),n.click(),n.remove(),window.URL.revokeObjectURL(s),{success:!0,message:"Export started"}}catch(e){const a=((t=(r=e.response)==null?void 0:r.data)==null?void 0:t.message)||e.message||"Failed to export commissions";return console.error("Error exporting commissions:",e),{success:!1,message:a}}},fetchSummary:async o=>{try{const r=o||g.value,t=await m.get("admin/commissions/summary",{params:r});t.data.success&&(v.value=t.data.data)}catch(r){console.error("Error fetching commission summary:",r)}},resetFilters:()=>{g.value={page:1,per_page:15,sort:"created_at",dir:"desc"}},clearCurrentCommission:()=>{i.value=null}}});export{P as u};
